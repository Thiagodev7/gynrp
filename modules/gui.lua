-- This file was generated using Luraph Obfuscator v13.5.9

return(function(uK,vK,xK,AK,CK,RK,EK,tK,bK,yK,qK,iK,cK,XK,lK,JK,dK,GK,BK,pK,DK,VK,NK,OK,eK,oK,wK,HK,kK,MK,nK,mK,QK,jK,g,...)local k,i,w=nil,nil,(nil);local Q=(pcall);local E=(EK);goto _1586956252_0;::_1586956252_1::;i=0x1;goto _1586956252_2;::_1586956252_2::;w=QK;goto _1586956252_3;::_1586956252_0::;k=kK;goto _1586956252_1;::_1586956252_3::;local j,D=nil,(nil);for Lz=0,1 do if Lz~=0x0 then D=mK;else j=CK;end;end;local d,p=nil,nil;goto _1383185899_0;::_1383185899_0::;d=wK;goto _1383185899_1;::_1383185899_1::;p=AK.byte;goto _1383185899_2;::_1383185899_2::;local O,e,u=nil,nil,nil;local UK=(0X2);while-0X0076118423 do if UK<=0 then e=DK;UK=1;elseif UK==0X1 then do u=OK;end;break;break;break;break;break;else O=pK;UK=0;end;end;local q,Y,B=nil,nil,nil;local V=uK;local A=(qK);goto _1456311802_0;::_1456311802_1::;Y=bK;goto _1456311802_2;::_1456311802_0::;q=string.gsub;goto _1456311802_1;::_1456311802_2::;B=VK;goto _1456311802_3;::_1456311802_3::;local N=(nil);goto _1314386397_0;::_1314386397_1::;goto _1314386397_2;::_1314386397_0::;N=GK;goto _1314386397_1;::_1314386397_2::;local c=(nil);for wJ=0,0X01 do if wJ==0X00000 then else cend;end;local G,M=rawget,JK;UK=0x6;local S,l,b,X,x,L,v,t=nil,nil,nil,nil,nil,nil,nil,(nil);while UK<0X09 do if UK<=0X0003 then if UK<=1 then do if UK==0 then v=2147483648;UK=0X4;else do X=4294967296;end;UK=7;end;end;elseif UK~=2 then x=function()local cm=0X2;local Hm=nil;while(true)do if not(cm<=0)then if cm==1 then i=i+eK;do cm=0;end;else do Hm=p(c,i,i);end;cm=1;end;else do return Hm;end;end;end;end;do UK=5;end;else UK=8;end;else if UK<=5 then if UK~=4 then L={nK,0X007,0X00004};do UK=0;end;else t=0X02^0x034;UK=0X9;end;else if not(UK<=0x6)then if UK==0X007 then c=q(A(c,5),BK,function(RP)do if p(RP,2)==0X00048 then l=k(A(RP,0X1,0X1));return"";else local oi,Ci=1,nil;do while oi<=1 do if oi==0 then if l then local GN=O(Ci,l);do for Bw=0x0,1 do if Bw==0 then l=nil;else return GN;end;end;end;else return Ci;end;oi=0X2;else Ci=D(k(RP,0X000010));oi=0X0;end;end;end;end;end;end);do UK=3;end;else b=jK.insert;UK=1;end;else S=0x001;UK=2;end;end;end;end;local J=rawset;local R=X-0X1;local H=function()local GE,wE,XE=0X0,nil,(nil);while true do do if not(GE<=0)then if GE==0x1 then return wE;else i=XE;GE=0x00001;end;else wE,XE=d("\x3C\z  \x49\u{0034}",c,i);GE=2;end;end;end;end;local U,h,T=nil,nil,nil;do for Xy=0X0,2 do do if not(Xy<=0x0)then if Xy==1 then h=function(...)do return E("\z \u{23}",...),{...};end;end;else do T={[6]=0.8670268183596742,[0]='P\z \039\u{00023}',[0X2]=0x1.00C4642c5171cP-3,[7]=3,[0X6]=0,[0X00000]=NK,[2]=true,[8]=0.5348007462238253,[8]=0X4,[0X02]=1,[0X00004]=1,[0X9]=dK,[MK]=2,[8]=2,[0X5]=6,[0X00]=0X001,[MK]=0X0006};end;end;else U=function()local XU,gU=nil,nil;local wU=0;while wU<=0X00001 do if wU~=0 then i=gU;wU=0X2;else XU,gU=d("<i8",c,i);wU=1;end;end;do return XU;end;end;end;end;end;end;local o=v-1;UK=5;local Z,y,f,C,F,m=nil,nil,nil,nil,nil,nil;do repeat if UK<=0X002 then if UK<=0 then C=cK;do UK=0x00003;end;elseif UK~=1 then m=lK;do UK=6;end;else y=function(sX,qX,vX)return sX>>qX&~(~0X00000<<vX);end;do UK=0X04;end;end;else do if UK<=0X3 then do F=function()local mu,Vu=0X0,(0);do while-2274384 do local gZ=p(c,i,i);i=i+0X1;mu=mu|((gZ&127)<<Vu);if((gZ&0X80)~=0X0)then else return mu;end;Vu=Vu+7;end;end;end;end;UK=2;else do if UK==0x4 then f=function()local nM,tM=nil,nil;goto _621954069_0;::_621954069_1::;i=tM;goto _621954069_2;::_621954069_0::;nM,tM=d(iK,c,i);goto _621954069_1;::_621954069_2::;do return nM;end;goto _621954069_3;::_621954069_3::;end;do UK=0X0;end;else Z=function(ij,Sj)return ij~Sj;end;UK=1;end;end;end;end;end;until UK>5;end;local K=x();local r=(x());UK=0;local s,z,P,W=nil,nil,nil,(nil);while UK<=3 do if not(UK<=1)then if UK~=0x2 then do W=function(d2)local A2,f2=nil,nil;goto _849848934_0;::_849848934_0::;A2=H();goto _849848934_1;::_849848934_1::;do f2='';end;goto _849848934_2;::_849848934_2::;do for hP=1,A2,7997 do local lP=(hP+0x1F3d-1);if not(lP>A2)then else do lP=A2;end;end;local fP=(nil);goto _671214837_0;::_671214837_0::;fP={p(c,i+hP-0X1,i+lP-1)};goto _671214837_1;::_671214837_1::;for gs=1,#fP do fP[gs]=Z(fP[gs],K);K=(d2*K+0XE7)%HK;end;goto _671214837_2;::_671214837_2::;do f2=f2..D(N(fP));end;end;end;local L2=0;while(true)do if L2~=0X0 then return f2;else do i=i+A2;end;do L2=1;end;end;end;end;end;UK=0x4;else P={};UK=3;end;elseif UK==0 then s=function(eL)local VL={p(c,i,i+3)};local kL,QL,WL=nil,nil,(nil);do for tt=0,2 do if not(tt<=0X00)then if tt~=0X0001 then WL=Z(VL[0X0003],r);else QL=Z(VL[xK],r);end;else kL=Z(VL[1],r);end;end;end;local LL=(nil);local fL=(0);while(true)do if not(fL<=1)then if fL~=2 then return LL*0X0001000000+WL*65536+QL*256+kL;else r=(229*r+eL)%HK;fL=1;end;else do if fL==0X000 then do LL=Z(VL[4],r);end;fL=2;else do i=i+0X00004;end;fL=0X3;end;end;end;end;end;do UK=1;end;else do z=function()local It=(F());if not(It>o)then else return It-X;end;return It;end;end;UK=2;end;end;local I=(nil);for rQ=0,0X00001 do do if rQ==0 then I={};else end;end;end;local a,gK,YK=nil,nil,nil;do for AJ=0X0,5 do do if AJ<=2 then if AJ<=0x00 then function a(mg,Cg,Dg)local Xg=Dg[3];local bg=Dg[0X05];local sg,ng,Pg=Dg[0x0007],Dg[0x02],Dg[0X0006];local fg,ug=Dg[8],(Dg[0x1]);local zg=(Dg[4]);local og=V({},{__mode="v"});local hg=(nil);hg=function(...)local lm,dm=0X1,(_ENV);local km={};local em=(dm==M and mg or dm);local Im={[0X01]=Dg,[0x2]=km};local bm,jm=h(...);do bm=bm-1;end;for El=0,bm do if not(fg>El)then break;do break;end;do break;end;else(km)[El]=jm[El+1];end;end;local fm=0;if not ng then jm=nil;elseif not(Pg)then else km[fg]={n=bm>=fg and bm-fg+0X1 or 0,N(jm,fg+0X01,bm+0X0001)};end;if em~=dm then _ENV=em;end;local Om,Zm,Hm,im=Q(function()while true do local MR=bg[lm];local zR=MR[2];lm=lm+1;if not(zR<0X30)then if zR<72 then if zR<60 then if not(zR>=54)then if not(zR<51)then if not(zR>=52)then(km)[MR[0x05]]=km[MR[0x4]]<<km[MR[0X7]];else if zR~=0x35 then repeat local WV,nV=og,km;do if#WV>0 then local wo=({});for eg,Lg in j,WV do for qU,ZU in j,Lg do do if not(ZU[1]==nV and ZU[2]>=0)then else local JC=(ZU[2]);do if not(not wo[JC])then else do wo[JC]={nV[JC]};end;end;end;(ZU)[1]=wo[JC];ZU[0X2]=1;end;end;end;end;end;end;until true;local VN=(MR[0x5]);fm=VN+0x1;return true,VN,2;else local E5=(MR[5]);km[E5]=km[E5](N(km,E5+0x1,fm));fm=E5;end;end;else if zR>=0X31 then if zR==50 then local VQ=(MR[5]);do(km)[VQ]=km[VQ](km[VQ+1],km[VQ+0X2]);end;fm=VQ;else if MR[7]~=66 then(km)[MR[0x5]]=km[MR[0X4]];else do lm=lm-1;end;(bg)[lm]={[0X4]=(MR[0x4]-176),[5]=(MR[5]-0XB0),[0x0002]=0x47};end;end;else km[MR[5]]=MR[1];end;end;else if not(zR<57)then if not(zR>=58)then local A4=MR[4];(km)[MR[5]]=km[A4]..km[A4+1];else if zR==0X00003B then local an=(MR[0x05]);(km[an])(N(km,an+0X0001,fm));fm=an-0x001;else km[MR[0X5]]=km[MR[4]]+km[MR[7]];end;end;else if zR>=55 then if zR==0X38 then local H9=MR[0x05];local i9=(B(function(...)(e)();for hK,WK in...do e(true,hK,WK);end;end));i9(km[H9],km[H9+0X0001],km[H9+0x2]);fm=H9;do(km)[H9]=i9;end;do lm=MR[4];end;else local vX=MR[0X005];local dX=(B(function(...)(e)();do for l0 in...do e(true,l0);end;end;end));dX(km[vX],km[vX+0X1],km[vX+0X002]);fm=vX;km[vX]=dX;lm=MR[4];end;else do if not(not(km[MR[0X04]]<=km[MR[7]]))then else lm=MR[5];end;end;end;end;end;else if not(zR>=0X0042)then if not(zR>=0x3F)then do if not(zR<0x3d)then do if zR==0x3E then if MR[0X7]==248 then lm=lm-0X001;bg[lm]={[0X0002]=80,[0X4]=(MR[0X4]-214),[0X00005]=(MR[0X005]-0XD6)};elseif MR[7]~=87 then local M7,J7=bm-fg,(MR[5]);if M7<0x0 then M7=-1;end;do for zx=J7,J7+M7 do do km[zx]=jm[fg+(zx-J7)+1];end;end;end;do fm=J7+M7;end;else lm=lm-0X01;do bg[lm]={[2]=61,[4]=(MR[0x004]-186),[0X05]=(MR[5]-186)};end;end;else if MR[7]==190 then lm=lm-1;do bg[lm]={[5]=(MR[0X5]-6),[4]=(MR[0X4]-6),[0X2]=0X050};end;else do km[MR[5]]=not km[MR[0X004]];end;end;end;end;else local ua=(MR[0x05]);local ba,Ia=km[ua]();if not(ba)then else km[ua+1]=Ia;lm=MR[4];end;end;end;else if not(zR>=0X40)then(km)[MR[0x00005]]=true;else if zR~=0X41 then local sm=(MR[0x005]);local Em,um,Sm=km[sm]();if not(Em)then else km[sm+1]=um;(km)[sm+0X2]=Sm;lm=MR[0X4];end;else do repeat local w1,g1=og,km;if not(#w1>0)then else local oV=({});for WI,eI in j,w1 do for tu,Zu in j,eI do if not(Zu[0X1]==g1 and Zu[0X002]>=0)then else local Au=Zu[2];if not oV[Au]then do(oV)[Au]={g1[Au]};end;end;Zu[1]=oV[Au];(Zu)[2]=0x1;end;end;end;end;until true;end;local jd=MR[0x05];return false,jd,jd+MR[0X00004]-2;end;end;end;else if not(zR<0X000045)then if zR<70 then do km[MR[5]]=km[MR[4]][MR[0X3]];end;else if zR==0X47 then do if MR[7]==249 then lm=lm-1;bg[lm]={[4]=(MR[0x4]-201),[0X5]=(MR[5]-201),[2]=0x50};else repeat local XJ,FJ=og,km;if not(#XJ>0X0)then else local nO={};do for NL,rL in j,XJ do for Kw,Lw in j,rL do if Lw[0x1]==FJ and Lw[0x2]>=0 then local M1=(Lw[2]);if not(not nO[M1])then else nO[M1]={FJ[M1]};end;Lw[1]=nO[M1];(Lw)[2]=1;end;end;end;end;end;until true;return;end;end;else do(km)[MR[5]]=km[MR[4]]>>km[MR[7]];end;end;end;else if not(zR<67)then if zR~=0x44 then local Ov=MR[4];local Qv=km[Ov];for M3=Ov+1,MR[0X7]do Qv=Qv..km[M3];end;km[MR[5]]=Qv;else km[MR[5]]=km[MR[0X4]]^km[MR[7]];end;else do(km[MR[0X5]])[km[MR[0X004]]]=MR[0X00003];end;end;end;end;end;else do if zR<0x000054 then if not(zR<0X00004E)then if zR<81 then if zR<0X004F then if not(km[MR[0X4]]<km[MR[7]])then else lm=MR[0x05];end;else if zR~=80 then(km)[MR[5]]=km[MR[4]]%km[MR[7]];else repeat local RW,kW=og,km;do if#RW>0 then local Z0={};do for N4,b4 in j,RW do do for J3,k3 in j,b4 do if not(k3[1]==kW and k3[0X2]>=0X0)then else local R2=k3[0x2];if not Z0[R2]then(Z0)[R2]={kW[R2]};end;(k3)[0x1]=Z0[R2];(k3)[2]=1;end;end;end;end;end;end;end;until true;do return false,MR[0x0005],fm;end;end;end;else if not(zR>=0X52)then if not(km[MR[0X4]]<km[MR[7]])then lm=MR[0X5];end;else if zR~=0X0053 then do km[MR[0X5]]=km[MR[4]]>=km[MR[7]];end;else(km)[MR[0X05]]=#km[MR[4]];end;end;end;else if not(zR<75)then do if not(zR<0X4C)then if zR~=77 then do km[MR[5]]=km[MR[4]]*km[MR[7]];end;else km[MR[0X5]]=km[MR[4]]~km[MR[0X7]];end;else local sT=zg[MR[4]];local gT=sT[9];local cT=(nil);local IT=(#gT);if IT>0 then cT={};for rr=0X1,IT do local fr=gT[rr];if fr[1]==0 then cT[rr-0x1]={km,fr[2]};else do(cT)[rr-1]=Cg[fr[2]];end;end;end;(b)(og,cT);end;km[MR[5]]=a(em,cT,sT);end;end;else do if not(zR<0X49)then if zR~=0x4A then(I)[MR[0x4]]=km[MR[0X0005]];else local Bl=MR[5];km[Bl](km[Bl+0x1],km[Bl+2]);fm=Bl-1;end;else do km[MR[5]]=km[MR[0x00004]]&km[MR[7]];end;end;end;end;end;else if not(zR>=90)then do if zR<87 then do if zR>=0X55 then if zR~=0x000056 then(km)[MR[0X5]]=em[MR[0x1]];else(km)[MR[5]]=km[MR[0X00004]]-MR[0X3];end;else(km)[MR[0x5]]=km[MR[0X0004]]<km[MR[7]];end;end;else if zR>=88 then if zR==89 then fm=MR[0X5];km[fm]=km[fm]();else do if km[MR[0X4]]~=MR[0X3]then do lm=MR[5];end;end;end;end;else(km)[MR[0X005]]=km[MR[4]]-km[MR[7]];end;end;end;else if zR<0X5D then if zR>=0X00005b then if zR~=92 then if not(km[MR[4]]<=MR[3])then lm=MR[5];end;else local EC=MR[0X5];local XC,jC=km[EC]();if not(XC)then else for ju=1,MR[0X7]do km[EC+ju]=jC[ju];end;lm=MR[0X0004];end;end;else do if MR[7]~=0x7a then repeat local mV,aV,MV=og,km,MR[5];do if#mV>0X0 then local JP=({});for iL,tL in j,mV do for g_,b_ in j,tL do if b_[1]==aV and b_[0X2]>=MV then local nP=b_[0X0002];if not(not JP[nP])then else(JP)[nP]={aV[nP]};end;do(b_)[0X01]=JP[nP];end;b_[0X0002]=0X1;end;end;end;end;end;until true;else do lm=lm-1;end;bg[lm]={[0X005]=(MR[5]-142),[0x004]=(MR[0x04]-142),[0x00002]=0X1c};end;end;end;else if zR<95 then do if zR~=0x5E then do km[MR[5]]=~km[MR[4]];end;else if km[MR[4]]==km[MR[7]]then do lm=MR[0X005];end;end;end;end;else if zR~=96 then km[MR[0X5]]=km[MR[4]]~=MR[3];else do Im[MR[0X0004]]=km[MR[0x005]];end;end;end;end;end;end;end;end;else if not(zR>=0X00018)then if not(zR>=12)then if zR>=6 then if zR<0X09 then if not(zR<0X007)then do if zR~=0X008 then do km[MR[0X005]]=km[MR[4]]|km[MR[0X7]];end;else lm=MR[4];end;end;else(km)[MR[5]]=km[MR[4]]/km[MR[0X7]];end;else if not(zR>=10)then if MR[0X7]==235 then lm=lm-0X1;do bg[lm]={[0X0002]=71,[4]=(MR[4]-0X00c1),[5]=(MR[0X5]-0x0C1)};end;else repeat local wF,aF=og,(km);if#wF>0X00 then local RJ={};for Ho,Vo in j,wF do do for pn,On in j,Vo do if On[0X1]==aF and On[0X002]>=0X0 then local hD=On[2];if not RJ[hD]then(RJ)[hD]={aF[hD]};end;(On)[1]=RJ[hD];do On[0X2]=1;end;end;end;end;end;end;until true;local DL=MR[5];return false,DL,DL;end;else do if zR~=11 then do(km)[MR[5]]=km[MR[0X04]]*MR[3];end;else km[MR[5]]=km[MR[0X4]]%MR[0X3];end;end;end;end;else if not(zR<0X3)then if zR>=0X4 then do if zR==5 then for Di=MR[5],MR[4]do km[Di]=nil;end;else(km)[MR[0x005]]=km[MR[0x4]]>km[MR[7]];end;end;else local mM=(MR[5]);local uM=MR[0x4];do fm=mM+uM-0x00001;end;repeat local aK,SK=og,km;if not(#aK>0)then else local LB={};for Sx,Px in j,aK do for es,ws in j,Px do if not(ws[0X001]==SK and ws[2]>=0)then else local pN=(ws[0X2]);if not LB[pN]then LB[pN]={SK[pN]};end;(ws)[1]=LB[pN];do ws[2]=1;end;end;end;end;end;until true;return true,mM,uM;end;else if not(zR>=0x01)then repeat local IR,qR=og,km;if#IR>0X0 then local TE=({});do for Ra,Ma in j,IR do for lQ,SQ in j,Ma do if not(SQ[1]==qR and SQ[0X2]>=0X000)then else local UR=(SQ[0X2]);if not TE[UR]then TE[UR]={qR[UR]};end;(SQ)[1]=TE[UR];SQ[2]=1;end;end;end;end;end;until true;return true,MR[0X5],1;else if zR~=0X02 then local hK=(MR[5]);(km[hK])(km[hK+1]);fm=hK-1;else local tT,aT=MR[5],((MR[7]-1)*0x32);local ST=km[tT];for cf=0x1,fm-tT do(ST)[aT+cf]=km[tT+cf];end;end;end;end;end;else if not(zR>=0X12)then if zR<15 then do if zR>=0X000d then if zR==14 then(km)[MR[5]]=false;else do if MR[0x7]==211 then do lm=lm-0X1;end;bg[lm]={[2]=0X3E,[0X4]=(MR[4]-68),[5]=(MR[0X005]-68)};elseif MR[7]==3 then lm=lm-0X1;do(bg)[lm]={[5]=(MR[0X5]-0X35),[2]=0X1C,[0X04]=(MR[0x4]-0X35)};end;else do if km[MR[5]]then do lm=MR[4];end;end;end;end;end;end;else local XU=Cg[MR[0X4]];(km)[MR[5]]=XU[1][XU[0X2]];end;end;else if not(zR<16)then if zR==17 then km[MR[0X05]]=km[MR[4]]<=km[MR[7]];else local Tn=(MR[5]);local un=(km[MR[4]]);do(km)[Tn+0X1]=un;end;km[Tn]=un[MR[0X00003]];end;else do(km)[MR[5]]=-km[MR[0X4]];end;end;end;else do if zR<21 then do if zR>=0X13 then if zR~=20 then fm=MR[5];km[fm]();do fm=fm-0x01;end;else local Yp=(MR[0X5]);local Ep,Ip=km[Yp],(MR[7]-0X1)*50;do for tW=1,MR[4]do Ep[Ip+tW]=km[Yp+tW];end;end;end;else(km)[MR[5]]=I[MR[0X4]];end;end;else if not(zR>=22)then local DD=MR[5];local mD=B(function(...)e();do for XQ,gQ,aQ,OQ,jQ,AQ,xQ,vQ,zQ,LQ in...do e(true,{XQ,gQ,aQ,OQ,jQ,AQ,xQ,vQ,zQ,LQ});end;end;end);(mD)(km[DD],km[DD+1],km[DD+2]);fm=DD;do(km)[DD]=mD;end;lm=MR[4];else if zR==0X000017 then(km[MR[0X005]])[MR[1]]=km[MR[7]];else do km[MR[5]]=MR[1];end;end;end;end;end;end;end;else do if not(zR<0X024)then if not(zR>=42)then if not(zR>=0X000027)then if not(zR>=0X25)then(km)[MR[5]]={};else if zR==38 then if not km[MR[5]]then do lm=MR[0X4];end;end;else repeat local H_,n_=og,(km);if#H_>0 then local Mc={};for IU,LU in j,H_ do for nh,oh in j,LU do if oh[1]==n_ and oh[2]>=0 then local R7=(oh[2]);if not(not Mc[R7])then else Mc[R7]={n_[R7]};end;(oh)[1]=Mc[R7];do oh[0X02]=1;end;end;end;end;end;until true;do return true,MR[5],0X0;end;end;end;else if zR>=40 then if zR==0x29 then local dp=Cg[MR[4]];do(dp[1])[dp[0X2]]=km[MR[0X005]];end;else(km)[MR[5]]=km[MR[0X004]]==km[MR[0X07]];end;else do km[MR[5]]=Im[MR[0X0004]];end;end;end;else do if not(zR>=45)then if not(zR>=0X002B)then km[MR[0X5]]=km[MR[0x004]]~=km[MR[0X0007]];else if zR~=0X002c then km[MR[0X5]][MR[0X00001]]=MR[3];else local Xu=(MR[5]);local Uu,zu=km[Xu]();if not(Uu)then else lm=MR[0X4];km[Xu+3]=zu;end;end;end;else if zR>=0X2e then do if zR==0x2F then if km[MR[4]]==km[MR[0X7]]then else do lm=MR[0x5];end;end;else local os=(MR[5]);(km)[os]=km[os](km[os+1]);fm=os;end;end;else local pz,zz=MR[5],MR[0X4];do if zz~=0X00 then fm=pz+zz-1;end;end;local nz=(MR[0X7]);local xz,Xz=nil,nil;do if zz~=0X01 then do xz,Xz=h(km[pz](N(km,pz+1,fm)));end;else do xz,Xz=h(km[pz]());end;end;end;do if nz==1 then do fm=pz-1;end;else if nz==0X0 then xz=xz+pz-0X00001;fm=xz;else xz=pz+nz-2;fm=xz+1;end;local NP=(0X0);do for iD=pz,xz do NP=NP+1;km[iD]=Xz[NP];end;end;end;end;end;end;end;end;else if not(zR<0X00001e)then if zR<0X21 then do if not(zR>=31)then local xm=(MR[5]);fm=xm+MR[4]-1;(km[xm])(N(km,xm+0X1,fm));fm=xm-0x1;else if zR==32 then if km[MR[4]]~=MR[3]then else lm=MR[5];end;else if MR[7]==0XBf then lm=lm-1;do bg[lm]={[0x5]=(MR[0x5]-0X28),[0x4]=(MR[4]-40),[0x2]=0X41};end;else km[MR[0x00005]]=jm[fg+1];end;end;end;end;else if zR<0X000022 then(km[MR[0X5]])[km[MR[0x00004]]]=km[MR[7]];else if zR~=0X23 then local lo=(MR[0X5]);local Fo=km[lo];local Wo,So=km[lo+1],km[lo+0X2];do km[lo]=B(function()for Xd=Fo,Wo,So do e(true,Xd);end;end);end;lm=MR[0X4];else do(km)[MR[0X5]]=km[MR[0X4]][km[MR[0X007]]];end;end;end;end;else if zR<0X1B then if not(zR>=0x19)then if MR[0X7]==118 then lm=lm-0X0001;bg[lm]={[2]=0x53,[5]=(MR[0X5]-0XD7),[4]=(MR[4]-0X000D7)};elseif MR[0x7]~=133 then local C4=MR[5];for Hk=C4,C4+(MR[4]-1)do km[Hk]=jm[fg+(Hk-C4)+1];end;else do lm=lm-1;end;bg[lm]={[4]=(MR[0x4]-0X78),[2]=0X1c,[0x00005]=(MR[0X005]-0X000078)};end;else if zR==0X1A then if km[MR[0X4]]<=km[MR[0x0007]]then lm=MR[5];end;else do km[MR[0X00005]]={N({},1,MR[0X4])};end;end;end;else if zR<28 then do(km)[MR[0X005]]=km[MR[0X04]]//km[MR[7]];end;else if zR~=29 then if MR[7]==239 then lm=lm-1;do(bg)[lm]={[0x4]=(MR[4]-0x8F),[0X2]=0x00005A,[5]=(MR[0X5]-143)};end;else km[MR[0x5]]=nil;end;else em[MR[0X00001]]=km[MR[0X05]];end;end;end;end;end;end;end;end;end;end);if not(Om)then if C(Zm)~="string"then w(Zm,0);else if not(u(Zm,"\x5E\z   \u{002E}\u{00002D}\z \x3A\z \x25\z    \100\x2B: "))then(w)(Zm,0);else w("Luraph Script:"..(sg[lm-1]or"(internal)").."\058\z    \u{020}"..m(Zm),0);end;end;else do if Zm then if im~=0x1 then return km[Hm](N(km,Hm+0x1,fm));else return km[Hm]();end;elseif not(Hm)then else return N(km,Hm,im);end;end;end;end;return hg;end;else if AJ~=0X001 then YK=gK();else function gK()local fK,TK,IK,aK=0,nil,nil,nil;repeat if not(fK<=0X0001)then do if fK==2 then aK={};fK=0x4;else TK={};fK=1;end;end;else if fK==0 then do fK=0X3;end;else IK=0X00001;fK=0X2;end;end;until fK>3;local zK,rK=nil,(nil);goto _86844785_0;::_86844785_1::;rK={};goto _86844785_2;::_86844785_0::;zK=H()-0X00001484D;goto _86844785_1;::_86844785_2::;do fK=0x0;end;local PK,ZK=nil,(nil);repeat if fK==0 then do PK={vK,vK,vK,{},{},vK,{},vK,nil};end;do fK=0X1;end;else do ZK=x();end;fK=0X00002;end;until fK==0X02;local LK=x()~=0X0;for gi=0X1,zK do local wi,di,Pi=nil,nil,nil;local ai=(0x0);do repeat do if ai<=0X01 then if ai~=0X0 then(TK)[gi-1]=IK;do ai=4;end;else wi=x();ai=3;end;else do if not(ai<=0X02)then do if ai==3 then di=nil;ai=1;else do if wi==116 then di=A(W(ZK),H());elseif wi==0x5 then di=f();elseif wi==127 then do di=U();end;elseif wi==0X0001B then di=XK;elseif wi==tK then di=A(W(ZK),H());elseif wi==0Xbe then di=false;elseif wi==160 then do di=A(W(ZK),xK);end;elseif wi==9 then do di=A(W(ZK),H());end;elseif wi==79 then di=f();elseif wi==0X5e then do di=H();end;end;end;do ai=2;end;end;end;else Pi={di,{}};do ai=5;end;end;end;end;end;until ai>=5;end;do rK[IK]=Pi;end;IK=IK+1;if LK then local y6=0X1;do repeat if y6~=0X0 then(P)[S]=Pi;do y6=0X0;end;else S=S+eK;do y6=0x0002;end;end;until y6>=0x2;end;end;end;for KJ=0,0X2 do if not(KJ<=0)then if KJ~=1 then PK[14]=H();else PK[19]=x();end;else(PK)[0X11]=x();end;end;do fK=0X1;end;local WK=nil;repeat if fK==0X0 then do WK=H()-16818;end;fK=0X02;else do(PK)[8]=F();end;fK=0X00000;end;until fK>1;local sK=PK[0X05];fK=0X07;local SK,hK=nil,nil;do while fK~=10 do if not(fK<=4)then if not(fK<=6)then if not(fK<=0X7)then if fK==0x8 then for ou=eK,F()do do(aK)[ou]={x(),F()};end;end;fK=6;else SK=x();do fK=4;end;end;else do for t0=0x00001,WK do(sK)[t0]={[1]=RK,[0X6]=XK,[5]=z(),[3]=-1549933247,[0x02]=F(),[0X007]=z(),[4]=oK,[6]=x(),[0X00004]=z(),[1]=x(),[3]=x()};end;end;fK=0X9;end;else if fK~=5 then do(PK)[3]=F();end;fK=0;else(PK)[9]=aK;do fK=8;end;end;end;else if not(fK<=0X1)then if fK<=0x0002 then do for zJ=0X0001,hK do local fJ,DJ,CJ=nil,nil,(nil);do for Vd=0X0,3 do if Vd<=0X01 then do if Vd==0x0 then do fJ=H();end;else do DJ=H();end;end;end;else do if Vd==0X00002 then CJ=H();else do for Rk=fJ,DJ do PK[0x0007][Rk]=CJ;end;end;end;end;end;end;end;end;end;fK=5;else do if fK~=0X3 then PK[xK]=y(SK,0x1,0X1)~=0;fK=0x3;else(PK)[0X0006]=y(SK,2,0X1)~=0X0;do fK=0x00001;end;end;end;end;else do if fK==0 then do for P6=1,WK do local F6=(PK[0X05][P6]);do for VY,wY in yK(L)do local HY,sY=nil,(nil);goto _1251185749_0;::_1251185749_0::;HY=T[wY];goto _1251185749_1;::_1251185749_2::;if sY==12 then local xj,Vj,cj=0X1,nil,nil;repeat if xj<=0X0 then do cj=rK[Vj];end;xj=2;else if xj~=1 then if cj then local lb=nil;for sx=0,2 do if sx<=0 then(F6)[HY]=cj[1];else do if sx==1 then lb=cj[2];else lb[#lb+1]={F6,HY};end;end;end;end;end;xj=3;else Vj=TK[F6[wY]];xj=0;end;end;until xj>=0X3;elseif sY==11 then do F6[wY]=P6+F6[wY]+eK;end;end;goto _1251185749_3;::_1251185749_1::;sY=F6[HY];goto _1251185749_2;::_1251185749_3::;end;end;end;end;fK=10;else hK=H();fK=0X2;end;end;end;end;end;end;local KK=PK[4];local FK=H()-23442;for Jf=0x00,FK-0X0001 do KK[Jf]=gK();end;(PK)[0x1]=F();return PK;end;end;end;else do if AJ<=3 then I[0X1]=P;elseif AJ==0X4 then P=nil;else return a(M,nil,YK)(...);end;end;end;end;end;end;end)(setmetatable,nil,2,string,next,0x1.407B00c3458ep-4,select,24,assert,ipairs,string.sub,"<d",type,true,tostring,_ENV,0x00009,table.unpack,"..",string.rep,coroutine.yield,coroutine.wrap,'\z    \x3C\x31',string.match,0X00001,'\x2CN\x2D\x73\u{065}\z  \u{006A}\u{000070}',string.unpack,256,tonumber,0,5,string.char,error,table,{11187,0X00D7ef6A9,323033486,36093586,4088890543,0X002d28E16,0X0057768778,63048341,3557037914},...);